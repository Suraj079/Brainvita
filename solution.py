
def displayboard(pos):
    p = ['  ' for i in range(33)];

    if [-1,3] in pos:    p[0] = '* ';
    if [0,3] in pos:    p[1] = '* ';
    if [1,3] in pos:    p[2] = '* ';
    if [-1,2] in pos:    p[3] = '* ';
    if [0,2] in pos:    p[4] = '* ';
    if [1,2] in pos:    p[5] = '* ';
    if [-3,1] in pos:    p[6] = '* ';
    if [-2,1] in pos:    p[7] = '* ';
    if [-1,1] in pos:    p[8] = '* ';
    if [0,1] in pos:    p[9] = '* ';
    if [1,1] in pos:    p[10] = '* ';
    if [2,1] in pos:    p[11] = '* ';
    if [3,1] in pos:    p[12] = '* ';
    if [-3,0] in pos:    p[13] = '* ';
    if [-2,0] in pos:    p[14] = '* ';
    if [-1,0] in pos:    p[15] = '* ';
    if [0,0] in pos:    p[16] = '* ';
    if [1,0] in pos:    p[17] = '* ';
    if [2,0] in pos:    p[18] = '* ';
    if [3,0] in pos:    p[19] = '* ';
    if [-3,-1] in pos:    p[20] = '* ';
    if [-2,-1] in pos:    p[21] = '* ';
    if [-1,-1] in pos:    p[22] = '* ';
    if [0,-1] in pos:    p[23] = '* ';
    if [1,-1] in pos:    p[24] = '* ';
    if [2,-1] in pos:    p[25] = '* ';
    if [3,-1] in pos:    p[26] = '* ';
    if [-1,-2] in pos:    p[27] = '* ';
    if [0,-2] in pos:    p[28] = '* ';
    if [1,-2] in pos:    p[29] = '* ';
    if [-1,-3] in pos:    p[30] = '* ';
    if [0,-3] in pos:    p[31] = '* ';
    if [1,-3] in pos:    p[32] = '* ';


    print('    '+p[0]+p[1]+p[2]+'    \n'\
          '    '+p[3]+p[4]+p[5]+'    \n'\
          +p[6]+p[7]+p[8]+p[9]+p[10]+p[11]+p[12]+'\n'\
          +p[13]+p[14]+p[15]+p[16]+p[17]+p[18]+p[19]+'\n'\
          +p[20]+p[21]+p[22]+p[23]+p[24]+p[25]+p[26]+'\n'\
          '    '+p[27]+p[28]+p[29]+'    \n'\
          '    '+p[30]+p[31]+p[32]+'    \n');



def newpos(mov, pos):
    pos.remove(mov[0]);
    pos.append(mov[1]);
    pos.remove(mov[2]);
    return pos


movthread = [[[0, 2], [0, 0], [0, 1]], [[-2, 1], [0, 1], [-1, 1]], [[-1, 3], [-1, 1], [-1, 2]], [[1, 3], [-1, 3], [0, 3]], [[1, 1], [1, 3], [1, 2]], [[3, 1], [1, 1], [2, 1]], [[-1, 0], [-1, 2], [-1, 1]], [[-3, 0], [-1, 0], [-2, 0]], [[1, 0], [1, 2], [1, 1]], [[3, 0], [1, 0], [2, 0]], [[-1, -1], [-1, 1], [-1, 0]], [[-3, -1], [-1, -1], [-2, -1]], [[0, -1], [-2, -1], [-1, -1]], [[1, -1], [1, 1], [1, 0]], [[3, -1], [1, -1], [2, -1]], [[1, -2], [1, 0], [1, -1]], [[-1, -3], [-1, -1], [-1, -2]], [[1, -3], [-1, -3], [0, -3]], [[1, 0], [-1, 0], [0, 0]], [[0, 
1], [2, 1], [1, 1]], [[1, 3], [1, 1], [1, 2]], [[2, 1], [0, 1], [1, 1]], [[0, 1], [-2, 1], [-1, 1]], [[-1, 3], [-1, 1], [-1, 2]], [[-1, 
0], [-1, 2], [-1, 1]], [[-3, 1], [-1, 1], [-2, 1]], [[-1, 2], [-1, 0], [-1, 1]], [[-1, 0], [-1, -2], [-1, -1]], [[-1, -3], [-1, -1], [-1, -2]], [[-2, -1], [0, -1], [-1, -1]], [[0, -2], [0, 0], [0, -1]]]

pos = [[-1,3],[0,3],[1,3],\
        [-1,2],[0,2],[1,2],\
[-3,1],[-2,1],[-1,1],[0,1],[1,1],[2,1],[3,1],\
[-3,0],[-2,0],[-1,0],[1,0],[2,0],[3,0],\
[-3,-1],[-2,-1],[-1,-1],[0,-1],[1,-1],[2,-1],[3,-1],\
       [-1,-2], [0,-2], [1,-2],\
       [-1,-3], [0,-3], [1,-3]];    # Set board


displayboard(pos);
input();

for m in movthread:
    pos = newpos(m, pos);
    displayboard(pos);
    input();
